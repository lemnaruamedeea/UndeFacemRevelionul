@using UndeFacemRevelionul.ViewModels

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<h2>Select a location</h2>

<!-- FORMULAR DE FILTRARE -->
<form method="get" asp-action="ListLocations">
    <input type="hidden" name="partyId" value="@Model.PartyId" />

    <div class="row mb-3">
        <div class="col-md-3">
            <label for="search">Search (Name/Address):</label>
            <input type="text" name="search" class="form-control" value="@Context.Request.Query["search"]" />
        </div>
        <div class="col-md-2">
            <label for="minPrice">Min Price:</label>
            <input type="number" step="0.01" name="minPrice" class="form-control" value="@Context.Request.Query["minPrice"]" />
        </div>
        <div class="col-md-2">
            <label for="maxPrice">Max Price:</label>
            <input type="number" step="0.01" name="maxPrice" class="form-control" value="@Context.Request.Query["maxPrice"]" />
        </div>
        <div class="col-md-2">
            <label for="capacity">Capacity:</label>
            <input type="number" name="capacity" class="form-control" value="@Context.Request.Query["capacity"]" />
        </div>
        <div class="col-md-2">
            <label for="rating">Rating:</label>
            <input type="number" step="0.1" name="rating" class="form-control" value="@Context.Request.Query["rating"]" />
        </div>
        <div class="col-md-1 d-flex align-items-end">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
        <div class="col-md-1 d-flex align-items-end">
            <a href="@Url.Action("ListLocations", new { partyId = Model.PartyId })" class="btn btn-secondary">Reset</a>
        </div>
    </div>
</form>

<hr>

<!-- TABEL CU LOCAȚII -->
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Address</th>
            <th>Description</th>
            <th>Price</th>
            <th>Rating</th>
            <th>Provider</th>
            <th>Capacity (no. of persons)</th>
            <th>Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var location in Model.Locations)
        {
            <tr>
                <td>@location.Name</td>
                <td>@location.Address</td>
                <td>@location.Description</td>
                <td>
                    @if (Model.TotalPoints > 10000)
                    {
                        <span style="text-decoration: line-through;">@location.Price</span>
                        <span style="color: green; font-weight: bold;">@((location.Price * 0.9).ToString("F2"))</span>
                    }
                    else
                    {
                        @location.Price
                    }
                </td>
                <td>@location.Rating</td>
                <td>@location.Provider?.User.Name</td>
                <td>@location.Capacity</td>
                <td>@location.Date</td>
                <td>
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#locationModal"
                            data-id="@location.Id"
                            data-name="@location.Name"
                            data-address="@location.Address"
                            data-price="@location.Price"
                            data-description="@location.Description"
                            data-rating="@location.Rating"
                            data-provider="@location.Provider?.User.Name"
                            data-capacity="@location.Capacity"
                            data-date="@location.Date">
                        Details
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- MODAL DETALII LOCAȚIE -->
<div class="modal fade" id="locationModal" tabindex="-1" aria-labelledby="locationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="locationModalLabel">Location Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h4 id="locationName"></h4>
                <p><strong>Address:</strong> <span id="locationAddress"></span></p>
                <p><strong>Description:</strong> <span id="locationDescription"></span></p>
                <p>
                    <strong>Price:</strong>
                    <span id="locationPriceOriginal" style="text-decoration: line-through; display: none;"></span>
                    <span id="locationPrice"></span>
                </p>
                <p><strong>Rating:</strong> <span id="locationRating"></span></p>
                <p><strong>Provider:</strong> <span id="locationProvider"></span></p>
                <p><strong>Capacity:</strong> <span id="locationCapacity"></span></p>
                <p><strong>Date:</strong> <span id="locationDate"></span></p>
            </div>
            <div class="modal-footer">
                <form asp-action="AddLocationToParty" method="post">
                    <input type="hidden" name="partyId" value="@Model.PartyId" />
                    <input type="hidden" name="locationId" id="locationId" />
                    <button type="submit" class="btn btn-success">Add to Party</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var locationModal = document.getElementById('locationModal');
        locationModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var id = button.getAttribute('data-id');
            var name = button.getAttribute('data-name');
            var address = button.getAttribute('data-address');
            var price = parseFloat(button.getAttribute('data-price'));
            var description = button.getAttribute('data-description');
            var rating = button.getAttribute('data-rating');
            var provider = button.getAttribute('data-provider');
            var capacity = button.getAttribute('data-capacity');
            var date = button.getAttribute('data-date');
            var totalPoints = @Model.TotalPoints;

            document.getElementById('locationName').innerText = name;
            document.getElementById('locationAddress').innerText = address;
            document.getElementById('locationDescription').innerText = description;
            document.getElementById('locationRating').innerText = rating;
            document.getElementById('locationProvider').innerText = provider;
            document.getElementById('locationCapacity').innerText = capacity;
            document.getElementById('locationDate').innerText = date;
            document.getElementById('locationId').value = id;

            var priceElement = document.getElementById('locationPrice');
            var priceOriginalElement = document.getElementById('locationPriceOriginal');

            if (totalPoints > 10000) {
                var discountedPrice = (price * 0.9).toFixed(2);
                priceOriginalElement.style.display = "inline";
                priceOriginalElement.innerText = price.toFixed(2);
                priceElement.innerText = discountedPrice;
            } else {
                priceOriginalElement.style.display = "none";
                priceElement.innerText = price.toFixed(2);
            }
        });
    </script>
}
